# this is the file that sets up routing behavior for Nginx

# sets up the definition of an upstream called client
upstream client {
    server client:3000;
}

# server might be a reserved keyword, so a terminology change is required
upstream api {
    server api:5000;
}

server {
    listen 80;

    # if anyone comes to the root route then pass this request upstream to client on port 3000 as configured above
    location / {
        proxy_pass http://client;
    }

    # configure websockets through nginx - the /sockjs-node path can be seen in the browser dev console
    location /sockjs-node {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    # if anyone comes to the /api route then pass this request upstream to the api on port 5000 as configured above
    location /api {
        # this piece of configuration is called a REWRITE DIRECTIVE or REWRITE RULE
        # and it trims out the /api route that is in the api endpoint on the front end
        # but the routes on the back end do not have that namespace
        # it's a regexp that matches the /api/ regular expression where the $1 matches any text in the (.*) part
        # the break keyword is a directive that basically tells Nginx to not apply any more rules.
        rewrite /api/(.*) /$1 break;
        proxy_pass http://api;
    }
}